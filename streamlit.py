import joblib
import streamlit as st
import pandas as pd
import numpy as np


@st.cache_data  # üëà Add the caching decorator
def load_data(url):
    df = pd.read_csv(url)
    return df

model = joblib.load('model/ml_pipeline.pkl')

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Ñ–∞–π–ª–∞
data = load_data('data/car_data.csv')

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–π Series –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
selected_features = pd.Series(index = model.feature_names_in_)
selected_features.loc[0] = np.nan

# –ü–µ—Ä–≤—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä –±—Ä–µ–Ω–¥–∞
selected_features['brand'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è', data['brand'].unique())

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–∞—Ä–∫–µ
filtered_data = data[data['brand'] == selected_features['brand']]

# –í—Ç–æ—Ä–æ–π —à–∞–≥ - –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
selected_features['model'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è', filtered_data['model'].unique())
filtered_data = filtered_data[filtered_data['model'] == selected_features['model']]

# –¢—Ä–µ—Ç–∏–π —à–∞–≥ - –≤—ã–±–æ—Ä –ø–æ–∫–æ–ª–µ–Ω–∏—è
selected_features['–ø–æ–∫–æ–ª–µ–Ω–∏–µ'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫–æ–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', filtered_data['–ø–æ–∫–æ–ª–µ–Ω–∏–µ'].unique())
filtered_data = filtered_data[filtered_data['–ø–æ–∫–æ–ª–µ–Ω–∏–µ'] == selected_features['–ø–æ–∫–æ–ª–µ–Ω–∏–µ']]

# –ß–µ—Ç–≤—ë—Ä—Ç—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
selected_features['–º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—é –∞–≤—Ç–æ–º–æ–±–∏–ª—è', filtered_data['–º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è'].unique())
filtered_data = filtered_data[filtered_data['–º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è'] == selected_features['–º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è']]

# –ü—è—Ç—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏
selected_features['–∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—é –∞–≤—Ç–æ–º–æ–±–∏–ª—è', filtered_data['–∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è'].unique())
filtered_data = filtered_data[filtered_data['–∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è'] == selected_features['–∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è']]

# –®–µ—Å—Ç–æ–π —à–∞–≥ - –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∫—É–∑–æ–≤–∞
selected_features['—Ç–∏–ø –∫—É–∑–æ–≤–∞'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫—É–∑–æ–≤–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', filtered_data['—Ç–∏–ø –∫—É–∑–æ–≤–∞'].unique())
filtered_data = filtered_data[filtered_data['—Ç–∏–ø –∫—É–∑–æ–≤–∞'] == selected_features['—Ç–∏–ø –∫—É–∑–æ–≤–∞']]

# –°–µ–¥—å–º–æ–π —à–∞–≥ - –≤—ã–±–æ—Ä –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á
selected_features['–∫–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á', filtered_data['–∫–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á'].unique())
filtered_data = filtered_data[filtered_data['–∫–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á'] == selected_features['–∫–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á']]

# –í–æ—Å—å–º–æ–π —à–∞–≥ - –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è
selected_features['—Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è', filtered_data['—Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è'].unique())
filtered_data = filtered_data[filtered_data['—Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è'] == selected_features['—Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è']]

# –î–µ–≤—è—Ç—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä –ø—Ä–∏–≤–æ–¥–∞
selected_features['–ø—Ä–∏–≤–æ–¥'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–∏–≤–æ–¥–∞', filtered_data['–ø—Ä–∏–≤–æ–¥'].unique())
filtered_data = filtered_data[filtered_data['–ø—Ä–∏–≤–æ–¥'] == selected_features['–ø—Ä–∏–≤–æ–¥']]

# –î–µ—Å—è—Ç—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞
selected_features['–≥–æ–¥ –≤—ã–ø—É—Å–∫–∞'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', filtered_data['–≥–æ–¥ –≤—ã–ø—É—Å–∫–∞'].unique())
filtered_data = filtered_data[filtered_data['–≥–æ–¥ –≤—ã–ø—É—Å–∫–∞'] == selected_features['–≥–æ–¥ –≤—ã–ø—É—Å–∫–∞']]

# –û–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä –ø—Ä–æ–±–µ–≥–∞
selected_features['–ø—Ä–æ–±–µ–≥'] = st.number_input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–±–µ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è')

# –î–≤–µ–Ω–∞–¥—Ü–∞—Ç—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä —Ü–≤–µ—Ç–∞
selected_features['—Ü–≤–µ—Ç'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è', filtered_data['—Ü–≤–µ—Ç'].unique())
filtered_data = data[data['—Ü–≤–µ—Ç'] == selected_features['—Ü–≤–µ—Ç']]

# –¢—Ä–∏–Ω–∞–¥—Ü–∞—Ç—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä —Ç–∏–ø–∞ —Ä—É–ª—è
selected_features['—Ä—É–ª—å'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä—É–ª—è', filtered_data['—Ä—É–ª—å'].unique())

# –ß–µ—Ç—ã—Ä–Ω–∞–¥—Ü–∞—Ç—ã–π —à–∞–≥ - –≤—ã–±–æ—Ä —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è
selected_features['—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ'] = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è', filtered_data['—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ'].unique())

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
st.write('–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:')
st.write(selected_features)


if st.button('–û—Ü–µ–Ω–∏—Ç—å –∞–≤—Ç–æ'):
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Series –≤ DataFrame
    selected_vector = selected_features.to_frame().transpose()

    # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏
    prediction = np.round(model.predict(selected_vector))
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    st.write(f'–ü—Ä–æ–≥–Ω–æ–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {prediction} —Ä—É–±–ª–µ–π')
